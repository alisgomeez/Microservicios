{"ast":null,"code":"var _jsxFileName = \"/home/alis/Escritorio/Microservicios/frontend/src/components/Suscripciones.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Suscribir from './Suscribir';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Suscripciones = () => {\n  _s();\n  const [fecha, setFecha] = useState('');\n  const [empleado, setEmpleado] = useState('');\n  const [clientes, setClientes] = useState([]); // Lista de clientes\n  const [clienteSeleccionado, setClienteSeleccionado] = useState(null); // Estado para el cliente seleccionado\n\n  // Cargar los clientes cuando el componente se monta\n  useEffect(() => {\n    // Suponiendo que tienes una ruta en tu API que devuelve todos los clientes\n    fetch('http://localhost:3006/api/clientes').then(response => response.json()).then(data => setClientes(data)).catch(error => console.error('Error al obtener clientes:', error));\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Aquí se enviarán los datos para suscribir al cliente\n    console.log('Suscripción realizada:', {\n      fecha,\n      empleado,\n      clienteSeleccionado\n    });\n    // Llamar a la función para suscribir al cliente\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Suscripci\\xF3n de Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fecha\",\n          className: \"form-label\",\n          children: \"Fecha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"fecha\",\n          className: \"form-control\",\n          value: fecha,\n          onChange: e => setFecha(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"empleado\",\n          className: \"form-label\",\n          children: \"Empleado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"empleado\",\n          className: \"form-control\",\n          value: empleado,\n          onChange: e => setEmpleado(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona un empleado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), clientes.map(cliente => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cliente._id,\n            children: [cliente.nombre, \" \", cliente.apellido]\n          }, cliente._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), empleado && /*#__PURE__*/_jsxDEV(Suscribir, {\n        fecha: fecha,\n        empleado: empleado,\n        cliente: clienteSeleccionado // Puedes pasarlo como prop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Suscribir Cliente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Suscripciones, \"dYzJoHD7C4lb2+PgsLmyJvn9x8w=\");\n_c = Suscripciones;\nexport default Suscripciones;\nvar _c;\n$RefreshReg$(_c, \"Suscripciones\");","map":{"version":3,"names":["React","useState","useEffect","Suscribir","jsxDEV","_jsxDEV","Suscripciones","_s","fecha","setFecha","empleado","setEmpleado","clientes","setClientes","clienteSeleccionado","setClienteSeleccionado","fetch","then","response","json","data","catch","error","console","handleSubmit","e","preventDefault","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","map","cliente","_id","nombre","apellido","_c","$RefreshReg$"],"sources":["/home/alis/Escritorio/Microservicios/frontend/src/components/Suscripciones.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Suscribir from './Suscribir';\n\nconst Suscripciones = () => {\n  const [fecha, setFecha] = useState('');\n  const [empleado, setEmpleado] = useState('');\n  const [clientes, setClientes] = useState([]); // Lista de clientes\n  const [clienteSeleccionado, setClienteSeleccionado] = useState(null); // Estado para el cliente seleccionado\n\n  // Cargar los clientes cuando el componente se monta\n  useEffect(() => {\n    // Suponiendo que tienes una ruta en tu API que devuelve todos los clientes\n    fetch('http://localhost:3006/api/clientes')\n      .then((response) => response.json())\n      .then((data) => setClientes(data))\n      .catch((error) => console.error('Error al obtener clientes:', error));\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Aquí se enviarán los datos para suscribir al cliente\n    console.log('Suscripción realizada:', { fecha, empleado, clienteSeleccionado });\n    // Llamar a la función para suscribir al cliente\n  };\n\n  return (\n    <div className=\"container my-5\">\n      <h1>Suscripción de Cliente</h1>\n      <form onSubmit={handleSubmit}>\n        {/* Campo de fecha */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"fecha\" className=\"form-label\">Fecha</label>\n          <input\n            type=\"date\"\n            id=\"fecha\"\n            className=\"form-control\"\n            value={fecha}\n            onChange={(e) => setFecha(e.target.value)}\n            required\n          />\n        </div>\n\n        {/* Campo de empleado */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"empleado\" className=\"form-label\">Empleado</label>\n          <select\n            id=\"empleado\"\n            className=\"form-control\"\n            value={empleado}\n            onChange={(e) => setEmpleado(e.target.value)}\n            required\n          >\n            <option value=\"\">Selecciona un empleado</option>\n            {/* Suponiendo que la lista de empleados tiene un id y un nombre */}\n            {clientes.map((cliente) => (\n              <option key={cliente._id} value={cliente._id}>\n                {cliente.nombre} {cliente.apellido}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Aquí es donde mostrarás el formulario de suscripción */}\n        {empleado && (\n          <Suscribir\n            fecha={fecha}\n            empleado={empleado}\n            cliente={clienteSeleccionado} // Puedes pasarlo como prop\n          />\n        )}\n\n        <button type=\"submit\" className=\"btn btn-primary\">Suscribir Cliente</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Suscripciones;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}