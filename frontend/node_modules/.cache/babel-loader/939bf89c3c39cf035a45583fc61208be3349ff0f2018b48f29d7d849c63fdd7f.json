{"ast":null,"code":"var _jsxFileName = \"/home/alis/Escritorio/Microservicios/frontend/src/components/Proveedores.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Proveedores = () => {\n  _s();\n  const [proveedores, setProveedores] = useState([]); // Inicializar con un arreglo vacío\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Realizar la solicitud a la API\n    fetch('http://localhost:3003/api/proveedores').then(response => {\n      if (!response.ok) {\n        throw new Error('No se pudo obtener la información');\n      }\n      return response.text(); // Obtener la respuesta como texto\n    }).then(data => {\n      try {\n        const jsonData = JSON.parse(data); // Intentar convertirlo a JSON\n        setProveedores(jsonData);\n      } catch (e) {\n        setError('La respuesta no es un JSON válido');\n      }\n    }).catch(err => {\n      setError(err.message);\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error al obtener los proveedores: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gesti\\xF3n de Proveedores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Editar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Eliminar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Proveedores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), proveedores.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay proveedores disponibles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: proveedores.map(proveedor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: proveedor.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 50\n        }, this), \"Direcci\\xF3n: \", proveedor.direccion, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 47\n        }, this), \"Tel\\xE9fono: \", proveedor.telefono, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 45\n        }, this), \"Email: \", proveedor.email]\n      }, proveedor._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Proveedores, \"OFXznLssX8TgGzQaGtgShNmkHWU=\");\n_c = Proveedores;\nexport default Proveedores;\nvar _c;\n$RefreshReg$(_c, \"Proveedores\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Proveedores","_s","proveedores","setProveedores","error","setError","fetch","then","response","ok","Error","text","data","jsonData","JSON","parse","e","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","proveedor","nombre","direccion","telefono","email","_id","_c","$RefreshReg$"],"sources":["/home/alis/Escritorio/Microservicios/frontend/src/components/Proveedores.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Proveedores = () => {\n  const [proveedores, setProveedores] = useState([]);  // Inicializar con un arreglo vacío\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Realizar la solicitud a la API\n    fetch('http://localhost:3003/api/proveedores')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('No se pudo obtener la información');\n        }\n        return response.text();  // Obtener la respuesta como texto\n      })\n      .then((data) => {\n        try {\n          const jsonData = JSON.parse(data);  // Intentar convertirlo a JSON\n          setProveedores(jsonData);\n        } catch (e) {\n          setError('La respuesta no es un JSON válido');\n        }\n      })\n      .catch((err) => {\n        setError(err.message);\n      });\n  }, []);\n\n  if (error) {\n    return <div>Error al obtener los proveedores: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Gestión de Proveedores</h1>\n      <button>Editar</button>\n      <button>Eliminar</button>\n      <h2>Lista de Proveedores</h2>\n      {proveedores.length === 0 ? (\n        <p>No hay proveedores disponibles.</p>\n      ) : (\n        <ul>\n          {proveedores.map((proveedor) => (\n            <li key={proveedor._id}>\n              <strong>{proveedor.nombre}</strong><br />\n              Dirección: {proveedor.direccion}<br />\n              Teléfono: {proveedor.telefono}<br />\n              Email: {proveedor.email}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Proveedores;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}