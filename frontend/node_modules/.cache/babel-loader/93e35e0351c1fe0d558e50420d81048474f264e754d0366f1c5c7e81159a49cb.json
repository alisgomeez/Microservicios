{"ast":null,"code":"var _jsxFileName = \"/home/alis/Escritorio/Microservicios/frontend/src/components/AgregarCliente.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AgregarCliente = () => {\n  _s();\n  // Estados para los campos del formulario\n  const [nombre, setNombre] = useState('');\n  const [apellido, setApellido] = useState('');\n  const [telefono, setTelefono] = useState('');\n  const [empleado, setEmpleado] = useState(''); // Para almacenar el ID del empleado seleccionado\n  const [empleados, setEmpleados] = useState([]); // Para almacenar la lista de empleados\n  const [mensaje, setMensaje] = useState(''); // Para mostrar mensaje de éxito o error\n\n  // Obtener la lista de empleados desde la API\n  useEffect(() => {\n    const fetchEmpleados = async () => {\n      try {\n        const response = await fetch('http://localhost:3005/api/empleados');\n        const data = await response.json();\n        setEmpleados(data);\n      } catch (error) {\n        console.error('Error al obtener empleados:', error);\n      }\n    };\n    fetchEmpleados();\n  }, []);\n\n  // Función para manejar el envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault(); // Evitar el refresco de la página\n\n    const nuevoCliente = {\n      nombre,\n      apellido,\n      telefono,\n      empleado // Enviar el ID del empleado asociado\n    };\n    try {\n      const response = await fetch('http://localhost:3006/api/clientes/agregar', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(nuevoCliente)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMensaje('Cliente agregado exitosamente');\n        // Limpiar los campos del formulario\n        setNombre('');\n        setApellido('');\n        setTelefono('');\n        setEmpleado('');\n      } else {\n        setMensaje(`Error: ${data.mensaje}`);\n      }\n    } catch (error) {\n      setMensaje('Error al agregar el cliente');\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Agregar suscriptor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), mensaje && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          className: \"form-label\",\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"nombre\",\n          value: nombre,\n          onChange: e => setNombre(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"apellido\",\n          className: \"form-label\",\n          children: \"Apellido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"apellido\",\n          value: apellido,\n          onChange: e => setApellido(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"telefono\",\n          className: \"form-label\",\n          children: \"Tel\\xE9fono\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"telefono\",\n          value: telefono,\n          onChange: e => setTelefono(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"empleado\",\n          className: \"form-label\",\n          children: \"Empleado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"empleado\",\n          className: \"form-control\",\n          value: empleado,\n          onChange: e => setEmpleado(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona un empleado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), empleados.map(empleado => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: empleado._id,\n            children: empleado.nombre\n          }, empleado._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AgregarCliente, \"QgfWUXKi7hDRQ2HRSmu9RpK3lt4=\");\n_c = AgregarCliente;\nexport default AgregarCliente;\nvar _c;\n$RefreshReg$(_c, \"AgregarCliente\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AgregarCliente","_s","nombre","setNombre","apellido","setApellido","telefono","setTelefono","empleado","setEmpleado","empleados","setEmpleados","mensaje","setMensaje","fetchEmpleados","response","fetch","data","json","error","console","handleSubmit","e","preventDefault","nuevoCliente","method","headers","body","JSON","stringify","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","map","_id","_c","$RefreshReg$"],"sources":["/home/alis/Escritorio/Microservicios/frontend/src/components/AgregarCliente.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst AgregarCliente = () => {\n  // Estados para los campos del formulario\n  const [nombre, setNombre] = useState('');\n  const [apellido, setApellido] = useState('');\n  const [telefono, setTelefono] = useState('');\n  const [empleado, setEmpleado] = useState(''); // Para almacenar el ID del empleado seleccionado\n  const [empleados, setEmpleados] = useState([]); // Para almacenar la lista de empleados\n  const [mensaje, setMensaje] = useState(''); // Para mostrar mensaje de éxito o error\n\n  // Obtener la lista de empleados desde la API\n  useEffect(() => {\n    const fetchEmpleados = async () => {\n      try {\n        const response = await fetch('http://localhost:3005/api/empleados');\n        const data = await response.json();\n        setEmpleados(data);\n      } catch (error) {\n        console.error('Error al obtener empleados:', error);\n      }\n    };\n\n    fetchEmpleados();\n  }, []);\n\n  // Función para manejar el envío del formulario\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Evitar el refresco de la página\n\n    const nuevoCliente = {\n      nombre,\n      apellido,\n      telefono,\n      empleado, // Enviar el ID del empleado asociado\n    };\n\n    try {\n      const response = await fetch('http://localhost:3006/api/clientes/agregar', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(nuevoCliente),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setMensaje('Cliente agregado exitosamente');\n        // Limpiar los campos del formulario\n        setNombre('');\n        setApellido('');\n        setTelefono('');\n        setEmpleado('');\n      } else {\n        setMensaje(`Error: ${data.mensaje}`);\n      }\n    } catch (error) {\n      setMensaje('Error al agregar el cliente');\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"container my-5\">\n      <h2>Agregar suscriptor</h2>\n      \n      {/* Mostrar mensaje de éxito o error */}\n      {mensaje && <div className=\"alert alert-info\">{mensaje}</div>}\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n          <label htmlFor=\"nombre\" className=\"form-label\">Nombre</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"nombre\"\n            value={nombre}\n            onChange={(e) => setNombre(e.target.value)}\n            required\n          />\n        </div>\n        \n        <div className=\"mb-3\">\n          <label htmlFor=\"apellido\" className=\"form-label\">Apellido</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"apellido\"\n            value={apellido}\n            onChange={(e) => setApellido(e.target.value)}\n            required\n          />\n        </div>\n        \n        <div className=\"mb-3\">\n          <label htmlFor=\"telefono\" className=\"form-label\">Teléfono</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"telefono\"\n            value={telefono}\n            onChange={(e) => setTelefono(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"empleado\" className=\"form-label\">Empleado</label>\n          <select\n            id=\"empleado\"\n            className=\"form-control\"\n            value={empleado}\n            onChange={(e) => setEmpleado(e.target.value)}\n            required\n          >\n            <option value=\"\">Selecciona un empleado</option>\n            {empleados.map((empleado) => (\n              <option key={empleado._id} value={empleado._id}>\n                {empleado.nombre}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">Agregar</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AgregarCliente;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}